version: 2
jobs:
  test-run:
    working_directory: ~/sdclientapi
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "dev-requirements.txt" }}
      - run:
          name: Install dependencies
          command: |
            make venv
            source .venv/bin/activate
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "dev-requirements.txt" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"
      - run:
          name: Run linter, tests, check for known CVEs
          command: |
            source .venv/bin/activate
            make check

  test-against-latest-api:
    working_directory: ~/project
    machine:
      enabled: true
      image: ubuntu-1604:201903-01
    environment:
      DOCKER_API_VERSION: 1.23
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pyenv global 3.7.0
            make venv
            source .venv/bin/activate
      - run:
          name: Download SecureDrop server code
          command: git clone https://github.com/freedomofpress/securedrop.git
      - run:
          name: Start spinning up the SecureDrop server container
          command: |
            cd securedrop
            NUM_SOURCES=5 make -C securedrop dev
          background: true
      - run:  # As suggested in https://discuss.circleci.com/t/prevent-race-conditions-by-waiting-for-services-with-dockerize/11215
          name: Install dockerize
          command: |
            wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz &&
            sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz &&
            rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Wait for server to be up and for test sources to load
          command: |
            dockerize -wait tcp://127.0.0.1:8080 -timeout 30m
            sleep 30
      - run:
          name: Remove VCR cassettes and run tests against latest API
          command: |
            rm data/*.yml  # Removing VCR cassettes
            source .venv/bin/activate
            make test

workflows:
  version: 2
  securedrop_ci:
    jobs:
      - test-run
      - test-against-latest-api
  nightly:
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - test-against-latest-api
